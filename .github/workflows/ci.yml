name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  test-pure-go:
    name: Test Pure Go Backend
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        go-version: ['1.24.x']
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Test Pure Go Backend
        env:
          CGO_ENABLED: 0
        run: |
          go test -v -race -coverprofile=coverage-pure.out -covermode=atomic ./...
          go tool cover -func=coverage-pure.out

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage-pure.out
          flags: pure-go
          name: pure-go-${{ matrix.platform }}-${{ matrix.go-version }}

  test-cgo:
    name: Test CGO Backend
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: ['1.24.x']
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install Linux packages
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update -qq -y
          sudo apt-get install -y libsodium-dev libczmq-dev libzmq3-dev

      - name: Test with CGO (attempting CZMQ)
        env:
          CGO_ENABLED: 1
        run: |
          # Test with czmq tag if available
          go test -tags czmq -v -coverprofile=coverage-cgo.out -covermode=atomic ./... 2>/dev/null || \
          go test -v -coverprofile=coverage-cgo.out -covermode=atomic ./...
          go tool cover -func=coverage-cgo.out

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage-cgo.out
          flags: cgo
          name: cgo-${{ matrix.platform }}-${{ matrix.go-version }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Verify formatting
        run: |
          test -z $(gofmt -l .)

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1
        with:
          install-go: false
          version: "2023.1"

      - name: Run go vet
        run: go vet ./...

      - name: Check go mod tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Run benchmarks
        run: |
          go test -bench=. -benchmem -run=^$ ./... | tee bench.txt

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench.txt

  examples:
    name: Build Examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Build examples
        run: |
          for example in example/*.go; do
            echo "Building $example"
            go build -o /tmp/$(basename $example .go) $example
          done
